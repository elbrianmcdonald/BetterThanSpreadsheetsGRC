@model CyberRiskApp.ViewModels.DashboardViewModel
@{
    ViewData["Title"] = "CISO Executive Dashboard";
}

<!-- Dashboard CSS -->
<style>
    .dashboard-card-hover {
        transition: all 0.3s ease;
        text-decoration: none !important;
        display: block;
    }
    
    .dashboard-card-hover:hover {
        transform: translateY(-5px);
        box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15) !important;
        text-decoration: none !important;
    }
    
    .dashboard-card-hover .card {
        transition: all 0.3s ease;
    }
    
    .border-left-primary {
        border-left: 0.25rem solid #4e73df !important;
    }
    
    .border-left-success {
        border-left: 0.25rem solid #1cc88a !important;
    }
    
    .border-left-info {
        border-left: 0.25rem solid #36b9cc !important;
    }
    
    .border-left-warning {
        border-left: 0.25rem solid #f6c23e !important;
    }
    
    .border-left-danger {
        border-left: 0.25rem solid #e74a3b !important;
    }
    
    .border-left-dark {
        border-left: 0.25rem solid #5a5c69 !important;
    }
    
    .text-xs {
        font-size: 0.7rem;
    }
    
    .shadow {
        box-shadow: 0 0.15rem 1.75rem 0 rgba(58, 59, 69, 0.15) !important;
    }
</style>

<div class="container-fluid">

    @if (!string.IsNullOrEmpty(ViewBag.Error))
    {
        <div class="alert alert-danger">
            @ViewBag.Error
        </div>
    }

    <!-- Page Heading -->
    <div class="d-sm-flex align-items-center justify-content-between mb-4">
        <h1 class="h3 mb-0 text-gray-800">CISO Executive Dashboard</h1>
        <div class="d-none d-sm-inline-block">
            <small class="text-muted">@ViewBag.CurrentUserInfo</small>
        </div>
    </div>

    <!-- Summary Cards Row -->
    <div class="row">
        <!-- Open Findings Card -->
        <div class="col-xl-3 col-md-6 mb-4">
            <a href="@Url.Action("Index", "Findings", new { status = "open" })" class="text-decoration-none">
                <div class="card border-left-primary shadow h-100 py-2 dashboard-card-hover">
                    <div class="card-body">
                        <div class="row no-gutters align-items-center">
                            <div class="col mr-2">
                                <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">
                                    Open Findings
                                </div>
                                <div class="h5 mb-0 font-weight-bold text-gray-800">
                                    @Model.OpenFindings
                                </div>
                            </div>
                            <div class="col-auto">
                                <i class="fas fa-bug fa-2x text-gray-300"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </a>
        </div>

        <!-- High Risk Findings Card -->
        <div class="col-xl-3 col-md-6 mb-4">
            <a href="@Url.Action("Index", "Findings", new { status = "open", riskRating = "high" })" class="text-decoration-none">
                <div class="card border-left-danger shadow h-100 py-2 dashboard-card-hover">
                    <div class="card-body">
                        <div class="row no-gutters align-items-center">
                            <div class="col mr-2">
                                <div class="text-xs font-weight-bold text-danger text-uppercase mb-1">
                                    High Risk Findings
                                </div>
                                <div class="h5 mb-0 font-weight-bold text-gray-800">
                                    @Model.HighRiskFindings
                                </div>
                            </div>
                            <div class="col-auto">
                                <i class="fas fa-exclamation-triangle fa-2x text-gray-300"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </a>
        </div>

        <!-- Total Risks Card -->
        <div class="col-xl-3 col-md-6 mb-4">
            <a href="@Url.Action("Index", "Risks")" class="text-decoration-none">
                <div class="card border-left-info shadow h-100 py-2 dashboard-card-hover">
                    <div class="card-body">
                        <div class="row no-gutters align-items-center">
                            <div class="col mr-2">
                                <div class="text-xs font-weight-bold text-info text-uppercase mb-1">
                                    Total Risks
                                </div>
                                <div class="h5 mb-0 font-weight-bold text-gray-800">
                                    @Model.TotalRisks
                                </div>
                            </div>
                            <div class="col-auto">
                                <i class="fas fa-shield-alt fa-2x text-gray-300"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </a>
        </div>

        <!-- Critical Risk Findings Card -->
        <div class="col-xl-3 col-md-6 mb-4">
            <a href="@Url.Action("Index", "Findings", new { status = "open", riskRating = "critical" })" class="text-decoration-none">
                <div class="card border-left-danger shadow h-100 py-2 dashboard-card-hover" style="border-left: 0.25rem solid #e74c3c !important;">
                    <div class="card-body">
                        <div class="row no-gutters align-items-center">
                            <div class="col mr-2">
                                <div class="text-xs font-weight-bold text-danger text-uppercase mb-1">
                                    Critical Risk Findings
                                </div>
                                <div class="h5 mb-0 font-weight-bold text-gray-800">
                                    @Model.CriticalRiskFindings
                                </div>
                            </div>
                            <div class="col-auto">
                                <i class="fas fa-exclamation-circle fa-2x text-gray-300"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </a>
        </div>
    </div>

    <!-- Second Row of Cards -->
    <div class="row">
        <!-- Pending Requests Card -->
        <div class="col-xl-3 col-md-6 mb-4">
            <a href="@Url.Action("Index", "RiskBacklog", new { status = "unassigned" })" class="text-decoration-none">
                <div class="card border-left-success shadow h-100 py-2 dashboard-card-hover">
                    <div class="card-body">
                        <div class="row no-gutters align-items-center">
                            <div class="col mr-2">
                                <div class="text-xs font-weight-bold text-success text-uppercase mb-1">
                                    Pending Requests
                                </div>
                                <div class="h5 mb-0 font-weight-bold text-gray-800">
                                    @Model.PendingRequests
                                </div>
                            </div>
                            <div class="col-auto">
                                <i class="fas fa-clipboard-list fa-2x text-gray-300"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </a>
        </div>

        <!-- Overdue Items Card -->
        <div class="col-xl-3 col-md-6 mb-4">
            <a href="@Url.Action("Index", "RiskBacklog", new { filter = "overdue" })" class="text-decoration-none">
                <div class="card border-left-dark shadow h-100 py-2 dashboard-card-hover">
                    <div class="card-body">
                        <div class="row no-gutters align-items-center">
                            <div class="col mr-2">
                                <div class="text-xs font-weight-bold text-dark text-uppercase mb-1">
                                    Overdue Items
                                </div>
                                <div class="h5 mb-0 font-weight-bold text-gray-800">
                                    @Model.OverdueItems
                                </div>
                            </div>
                            <div class="col-auto">
                                <i class="fas fa-clock fa-2x text-gray-300"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </a>
        </div>

        <!-- Critical Risks Card -->
        <div class="col-xl-3 col-md-6 mb-4">
            <a href="@Url.Action("Index", "Risks", new { InherentRiskLevel = 4 })" class="text-decoration-none">
                <div class="card border-left-danger shadow h-100 py-2 dashboard-card-hover" style="border-left: 0.25rem solid #8B0000 !important;">
                    <div class="card-body">
                        <div class="row no-gutters align-items-center">
                            <div class="col mr-2">
                                <div class="text-xs font-weight-bold text-danger text-uppercase mb-1">
                                    Critical Risks
                                </div>
                                <div class="h5 mb-0 font-weight-bold text-gray-800">
                                    @Model.CriticalRisks
                                </div>
                            </div>
                            <div class="col-auto">
                                <i class="fas fa-radiation fa-2x text-gray-300"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </a>
        </div>

        <!-- High Risks Card -->
        <div class="col-xl-3 col-md-6 mb-4">
            <a href="@Url.Action("Index", "Risks", new { InherentRiskLevel = 3 })" class="text-decoration-none">
                <div class="card border-left-warning shadow h-100 py-2 dashboard-card-hover">
                    <div class="card-body">
                        <div class="row no-gutters align-items-center">
                            <div class="col mr-2">
                                <div class="text-xs font-weight-bold text-warning text-uppercase mb-1">
                                    High Risks
                                </div>
                                <div class="h5 mb-0 font-weight-bold text-gray-800">
                                    @Model.HighRisks
                                </div>
                            </div>
                            <div class="col-auto">
                                <i class="fas fa-fire fa-2x text-gray-300"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </a>
        </div>
    </div>

    <!-- Third Row - Compliance Cards -->
    @if (Model.ComplianceBreakdowns?.Any() == true)
    {
        <div class="row mb-4">
            <!-- Average Compliance Card -->
            <div class="col-xl-3 col-md-6 mb-4">
                <div class="card border-left-success shadow h-100 py-2">
                    <div class="card-body">
                        <div class="row no-gutters align-items-center">
                            <div class="col mr-2">
                                <div class="text-xs font-weight-bold text-success text-uppercase mb-1">
                                    Average Compliance
                                </div>
                                <div class="h5 mb-0 font-weight-bold text-gray-800">
                                    @Math.Round(Model.AverageCompliancePercentage, 1)%
                                </div>
                            </div>
                            <div class="col-auto">
                                <i class="fas fa-chart-pie fa-2x text-gray-300"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Total Frameworks Card -->
            <div class="col-xl-3 col-md-6 mb-4">
                <a href="@Url.Action("Index", "Governance")" class="text-decoration-none">
                    <div class="card border-left-info shadow h-100 py-2 dashboard-card-hover">
                        <div class="card-body">
                            <div class="row no-gutters align-items-center">
                                <div class="col mr-2">
                                    <div class="text-xs font-weight-bold text-info text-uppercase mb-1">
                                        Active Frameworks
                                    </div>
                                    <div class="h5 mb-0 font-weight-bold text-gray-800">
                                        @Model.TotalFrameworks
                                    </div>
                                </div>
                                <div class="col-auto">
                                    <i class="fas fa-shield-alt fa-2x text-gray-300"></i>
                                </div>
                            </div>
                        </div>
                    </div>
                </a>
            </div>

            <!-- Fully Compliant Frameworks Card -->
            <div class="col-xl-3 col-md-6 mb-4">
                <div class="card border-left-success shadow h-100 py-2">
                    <div class="card-body">
                        <div class="row no-gutters align-items-center">
                            <div class="col mr-2">
                                <div class="text-xs font-weight-bold text-success text-uppercase mb-1">
                                    Fully Compliant
                                </div>
                                <div class="h5 mb-0 font-weight-bold text-gray-800">
                                    @Model.FullyCompliantFrameworks
                                </div>
                            </div>
                            <div class="col-auto">
                                <i class="fas fa-check-circle fa-2x text-gray-300"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Empty slot for symmetry -->
            <div class="col-xl-3 col-md-6 mb-4">
                <!-- This space intentionally left empty for balanced layout -->
            </div>

        </div>

    }

    <!-- Executive Trend Analytics Dashboard -->
    @if (Model.TrendAnalytics != null)
    {
        <div class="row mb-4">
            <div class="col-12">
                <div class="card shadow">
                    <div class="card-header bg-success text-white">
                        <h6 class="m-0 font-weight-bold">
                            <i class="fas fa-chart-line me-2"></i>Executive Trend Analytics
                        </h6>
                    </div>
                    <div class="card-body">

                        <!-- First Row: Findings and Risks Trends -->
                        <div class="row">
                            <!-- Findings Trend Chart -->
                            <div class="col-lg-6 mb-4">
                                <div class="card">
                                    <div class="card-header">
                                        <h6 class="m-0 text-primary">Findings Trend (12 Months)</h6>
                                    </div>
                                    <div class="card-body">
                                        <canvas id="findingsTrendChart" width="400" height="200"></canvas>
                                    </div>
                                </div>
                            </div>

                            <!-- Risks Trend Chart -->
                            <div class="col-lg-6 mb-4">
                                <div class="card">
                                    <div class="card-header">
                                        <h6 class="m-0 text-primary">Risks Trend (12 Months)</h6>
                                    </div>
                                    <div class="card-body">
                                        <canvas id="risksTrendChart" width="400" height="200"></canvas>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Second Row: Risk Distribution and SLA Performance -->
                        <div class="row">
                            <!-- Risk Distribution by Severity -->
                            <div class="col-lg-6 mb-4">
                                <div class="card">
                                    <div class="card-header">
                                        <h6 class="m-0 text-primary">Risk Distribution by Severity</h6>
                                    </div>
                                    <div class="card-body">
                                        <canvas id="riskHeatMapChart" width="400" height="200"></canvas>
                                    </div>
                                </div>
                            </div>

                            <!-- SLA Performance Chart -->
                            <div class="col-lg-6 mb-4">
                                <div class="card">
                                    <div class="card-header">
                                        <h6 class="m-0 text-primary">SLA Performance (12 Months)</h6>
                                    </div>
                                    <div class="card-body">
                                        <canvas id="slaTrendChart" width="400" height="200"></canvas>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Third Row: Findings by Domain -->
                        <div class="row">
                            <!-- Domain Distribution -->
                            <div class="col-lg-6 mb-4">
                                @if (Model.TrendAnalytics.RiskHeatMapData.DomainDistribution.Any())
                                {
                                    <div class="card">
                                        <div class="card-header">
                                            <h6 class="m-0 text-primary">Findings by Domain</h6>
                                        </div>
                                        <div class="card-body">
                                            <canvas id="domainDistributionChart" width="400" height="200"></canvas>
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    <div class="card">
                                        <div class="card-header">
                                            <h6 class="m-0 text-muted">Findings by Domain</h6>
                                        </div>
                                        <div class="card-body text-center text-muted py-5">
                                            <i class="fas fa-sitemap fa-3x mb-3 opacity-25"></i>
                                            <p>No domain data available</p>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }

    <!-- Recent Findings -->
    <div class="row">
        <div class="col-lg-6 mb-4">
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Recent Findings</h6>
                </div>
                <div class="card-body">
                    @if (Model.RecentFindings.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-sm">
                                <thead>
                                    <tr>
                                        <th>Finding #</th>
                                        <th>Title</th>
                                        <th>Risk</th>
                                        <th>Status</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var finding in Model.RecentFindings)
                                    {
                                        <tr>
                                            <td>@finding.FindingNumber</td>
                                            <td>@finding.Title</td>
                                            <td><span class="badge badge-@GetRiskColor(finding.RiskRating)">@finding.RiskRating</span></td>
                                            <td>@finding.Status</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <p class="text-muted">No recent findings</p>
                    }
                </div>
            </div>
        </div>

        <!-- Pending Assessment Requests -->
        <div class="col-lg-6 mb-4">
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Pending Assessment Requests</h6>
                </div>
                <div class="card-body">
                    @if (Model.PendingAssessments.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-sm">
                                <thead>
                                    <tr>
                                        <th>Scope</th>
                                        <th>Priority</th>
                                        <th>Submitted</th>
                                        <th>Days Pending</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var request in Model.PendingAssessments)
                                    {
                                        <tr>
                                            <td>@request.Scope</td>
                                            <td><span class="badge badge-@GetPriorityColor(request.Priority)">@request.Priority</span></td>
                                            <td>@request.RequestDate.ToString("MMM dd")</td>
                                            <td>@((DateTime.UtcNow - request.RequestDate).Days)</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <p class="text-muted">No pending assessment requests</p>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Include Chart.js -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.9.1/chart.min.js"></script>

<script>
    @if (Model.TrendAnalytics != null)
    {
        <text>
        // Initialize trend charts when DOM is ready
        document.addEventListener('DOMContentLoaded', function() {
            initializeTrendCharts();
        });

        function initializeTrendCharts() {
            // Findings Trend Chart
            const findingsCtx = document.getElementById('findingsTrendChart');
            if (findingsCtx) {
                new Chart(findingsCtx, {
                    type: 'line',
                    data: {
                        labels: [@Html.Raw(Model.TrendAnalytics.FindingsTrendLabels)],
                        datasets: [{
                            label: 'Findings',
                            data: [@Html.Raw(Model.TrendAnalytics.FindingsTrendData)],
                            borderColor: '#e74c3c',
                            backgroundColor: 'rgba(231, 76, 60, 0.1)',
                            tension: 0.4,
                            fill: true
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        plugins: {
                            legend: {
                                display: false
                            }
                        },
                        scales: {
                            y: {
                                beginAtZero: true,
                                grid: {
                                    color: 'rgba(0,0,0,0.1)'
                                }
                            },
                            x: {
                                grid: {
                                    color: 'rgba(0,0,0,0.1)'
                                }
                            }
                        }
                    }
                });
            }

            // Risks Trend Chart
            const risksCtx = document.getElementById('risksTrendChart');
            if (risksCtx) {
                new Chart(risksCtx, {
                    type: 'line',
                    data: {
                        labels: [@Html.Raw(Model.TrendAnalytics.RisksTrendLabels)],
                        datasets: [{
                            label: 'Risks',
                            data: [@Html.Raw(Model.TrendAnalytics.RisksTrendData)],
                            borderColor: '#f39c12',
                            backgroundColor: 'rgba(243, 156, 18, 0.1)',
                            tension: 0.4,
                            fill: true
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        plugins: {
                            legend: {
                                display: false
                            }
                        },
                        scales: {
                            y: {
                                beginAtZero: true,
                                grid: {
                                    color: 'rgba(0,0,0,0.1)'
                                }
                            },
                            x: {
                                grid: {
                                    color: 'rgba(0,0,0,0.1)'
                                }
                            }
                        }
                    }
                });
            }

            // SLA Performance Chart
            const slaCtx = document.getElementById('slaTrendChart');
            if (slaCtx) {
                new Chart(slaCtx, {
                    type: 'line',
                    data: {
                        labels: [@Html.Raw(Model.TrendAnalytics.SLATrendLabels)],
                        datasets: [{
                            label: 'SLA Performance %',
                            data: [@Html.Raw(Model.TrendAnalytics.SLATrendData)],
                            borderColor: '#3498db',
                            backgroundColor: 'rgba(52, 152, 219, 0.1)',
                            tension: 0.4,
                            fill: true
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        plugins: {
                            legend: {
                                display: false
                            }
                        },
                        scales: {
                            y: {
                                beginAtZero: true,
                                max: 100,
                                grid: {
                                    color: 'rgba(0,0,0,0.1)'
                                },
                                ticks: {
                                    callback: function(value) {
                                        return value + '%';
                                    }
                                }
                            },
                            x: {
                                grid: {
                                    color: 'rgba(0,0,0,0.1)'
                                }
                            }
                        }
                    }
                });
            }

            // Risk Heat Map Chart
            const riskHeatMapCtx = document.getElementById('riskHeatMapChart');
            if (riskHeatMapCtx) {
                new Chart(riskHeatMapCtx, {
                    type: 'doughnut',
                    data: {
                        labels: ['Critical', 'High', 'Medium', 'Low'],
                        datasets: [{
                            data: [
                                @Model.TrendAnalytics.RiskHeatMapData.CriticalFindings,
                                @Model.TrendAnalytics.RiskHeatMapData.HighFindings,
                                @Model.TrendAnalytics.RiskHeatMapData.MediumFindings,
                                @Model.TrendAnalytics.RiskHeatMapData.LowFindings
                            ],
                            backgroundColor: [
                                '#8B0000', // Critical - Dark Red
                                '#e74c3c', // High - Red
                                '#f39c12', // Medium - Orange
                                '#27ae60'  // Low - Green
                            ],
                            borderWidth: 2,
                            borderColor: '#fff'
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        plugins: {
                            legend: {
                                position: 'bottom'
                            }
                        }
                    }
                });
            }

            // Domain Distribution Chart
            @if (Model.TrendAnalytics.RiskHeatMapData.DomainDistribution.Any())
            {
                <text>
                const domainCtx = document.getElementById('domainDistributionChart');
                if (domainCtx) {
                    new Chart(domainCtx, {
                        type: 'bar',
                        data: {
                            labels: [@Html.Raw(Model.TrendAnalytics.RiskHeatMapData.HeatMapLabels)],
                            datasets: [{
                                label: 'Findings',
                                data: [@Html.Raw(Model.TrendAnalytics.RiskHeatMapData.HeatMapData)],
                                backgroundColor: 'rgba(52, 152, 219, 0.8)',
                                borderColor: '#3498db',
                                borderWidth: 1
                            }]
                        },
                        options: {
                            responsive: true,
                            maintainAspectRatio: false,
                            plugins: {
                                legend: {
                                    display: false
                                }
                            },
                            scales: {
                                y: {
                                    beginAtZero: true,
                                    grid: {
                                        color: 'rgba(0,0,0,0.1)'
                                    }
                                },
                                x: {
                                    grid: {
                                        color: 'rgba(0,0,0,0.1)'
                                    }
                                }
                            }
                        }
                    });
                }
                </text>
            }
        }
        </text>
    }
</script>

@functions {
    private string GetRiskColor(RiskRating rating)
    {
        return rating switch
        {
            RiskRating.Critical => "danger",
            RiskRating.High => "warning",
            RiskRating.Medium => "info",
            RiskRating.Low => "success",
            _ => "secondary"
        };
    }

    private string GetPriorityColor(Priority priority)
    {
        return priority switch
        {
            Priority.Urgent => "danger",
            Priority.High => "warning",
            Priority.Medium => "info",
            Priority.Low => "success",
            _ => "secondary"
        };
    }
}
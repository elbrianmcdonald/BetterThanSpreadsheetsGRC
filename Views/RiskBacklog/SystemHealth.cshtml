@model CyberRiskApp.ViewModels.SystemHealthViewModel
@{
    ViewData["Title"] = "Risk Backlog System Health";
}

<div class="container-fluid">
    <!-- Enhanced Header with Navigation Context -->
    <div class="mb-4">
        <!-- Breadcrumb Navigation -->
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item">
                    <a asp-controller="Dashboard" asp-action="Index" class="text-decoration-none">
                        <i class="fas fa-home me-1"></i>Home Dashboard
                    </a>
                </li>
                <li class="breadcrumb-item">
                    <a asp-controller="RiskBacklog" asp-action="Index" class="text-decoration-none">
                        <i class="fas fa-inbox me-1"></i>Risk Workflow
                    </a>
                </li>
                <li class="breadcrumb-item active" aria-current="page">
                    <i class="fas fa-heartbeat me-1"></i>System Health
                </li>
            </ol>
        </nav>

        <!-- Main Header -->
        <div class="d-flex justify-content-between align-items-center">
            <div>
                <h2><i class="fas fa-heartbeat me-2 text-danger"></i>System Health Dashboard</h2>
                <p class="text-muted mb-0">Monitor the health and performance of the Risk Backlog system</p>
            </div>
            <div class="btn-toolbar" role="toolbar">
                <!-- Navigation -->
                <div class="btn-group me-2" role="group" aria-label="Navigation">
                    <a asp-controller="Dashboard" asp-action="Index" class="btn btn-outline-secondary" title="Return to main dashboard">
                        <i class="fas fa-home me-1"></i>Dashboard
                    </a>
                    <a asp-action="Index" class="btn btn-outline-primary" title="Back to Risk Workflow dashboard">
                        <i class="fas fa-inbox me-1"></i>Workflow Dashboard
                    </a>
                </div>

                <!-- Admin Tools -->
                <div class="btn-group" role="group" aria-label="Admin Tools">
                    <a asp-action="AdminWorkflow" class="btn btn-outline-info" title="View workflow pipeline">
                        <i class="fas fa-sitemap me-1"></i>Workflow Pipeline
                    </a>
                    <a asp-controller="RiskBacklog" asp-action="Reports" class="btn btn-outline-warning" title="View detailed reports">
                        <i class="fas fa-chart-bar me-1"></i>Reports
                    </a>
                </div>
            </div>
        </div>
    </div>

    <!-- Overall Health Score -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card border-@Model.HealthColor">
                <div class="card-header bg-@Model.HealthColor text-white">
                    <h4 class="mb-0">
                        <i class="fas fa-stethoscope me-2"></i>Overall System Health: @Model.HealthScore%
                        <span class="badge bg-light text-dark ms-2">@Model.HealthStatus</span>
                    </h4>
                </div>
                <div class="card-body">
                    <div class="progress mb-3" style="height: 25px;">
                        <div class="progress-bar bg-@Model.HealthColor" role="progressbar" style="width: @Model.HealthScore%" aria-valuenow="@Model.HealthScore" aria-valuemin="0" aria-valuemax="100">
                            @Model.HealthScore%
                        </div>
                    </div>
                    <div class="row text-center">
                        <div class="col-md-3">
                            <div class="border-end">
                                <h3 class="text-primary">@Model.TotalBacklogEntries</h3>
                                <small class="text-muted">Total Entries</small>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="border-end">
                                <h3 class="@(Model.OrphanedEntriesCount > 0 ? "text-danger" : "text-success")">@Model.OrphanedEntriesCount</h3>
                                <small class="text-muted">Orphaned (@Model.OrphanedPercentage.ToString("F1")%)</small>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="border-end">
                                <h3 class="@(Model.StuckEntriesCount > 0 ? "text-warning" : "text-success")">@Model.StuckEntriesCount</h3>
                                <small class="text-muted">Stuck (@Model.StuckPercentage.ToString("F1")%)</small>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <h3 class="@(Model.RecentErrorsCount > 0 ? "text-danger" : "text-success")">@Model.RecentErrorsCount</h3>
                            <small class="text-muted">Recent Errors (24h)</small>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Status Distribution -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0"><i class="fas fa-chart-pie me-2"></i>Backlog Status Distribution</h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        @foreach (var status in Model.BacklogByStatus.OrderBy(x => x.Key))
                        {
                            var percentage = Model.TotalBacklogEntries > 0 ? (status.Value * 100.0 / Model.TotalBacklogEntries) : 0;
                            var colorClass = status.Key switch
                            {
                                "Unassigned" => "secondary",
                                "AssignedToAnalyst" => "primary",
                                "AssignedToManager" => "info",
                                "Approved" => "success",
                                "Rejected" => "danger",
                                "Escalated" => "warning",
                                _ => "light"
                            };
                            
                            <div class="col-lg-2 col-md-4 col-sm-6 mb-3">
                                <div class="card border-@colorClass h-100">
                                    <div class="card-body text-center">
                                        <div class="display-6 text-@colorClass">@status.Value</div>
                                        <h6 class="card-title">@status.Key.Replace("AssignedTo", "")</h6>
                                        <div class="progress" style="height: 8px;">
                                            <div class="progress-bar bg-@colorClass" role="progressbar" style="width: @percentage%" aria-valuenow="@percentage" aria-valuemin="0" aria-valuemax="100"></div>
                                        </div>
                                        <small class="text-muted">@percentage.ToString("F1")%</small>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Health Indicators -->
    <div class="row mb-4">
        <!-- Performance Metrics -->
        <div class="col-md-6">
            <div class="card h-100">
                <div class="card-header bg-info text-white">
                    <h5 class="mb-0"><i class="fas fa-tachometer-alt me-2"></i>Performance Metrics</h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-6">
                            <div class="text-center p-3 border rounded mb-3">
                                <h4 class="@(Model.TotalBacklogEntries > 50 ? "text-warning" : "text-success")">@Model.TotalBacklogEntries</h4>
                                <small>Total Volume</small>
                                <div class="mt-2">
                                    @if (Model.TotalBacklogEntries > 100)
                                    {
                                        <span class="badge bg-danger">High Volume</span>
                                    }
                                    else if (Model.TotalBacklogEntries > 50)
                                    {
                                        <span class="badge bg-warning">Medium Volume</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-success">Normal Volume</span>
                                    }
                                </div>
                            </div>
                        </div>
                        <div class="col-6">
                            <div class="text-center p-3 border rounded mb-3">
                                <h4 class="@(Model.OrphanedPercentage > 10 ? "text-danger" : Model.OrphanedPercentage > 5 ? "text-warning" : "text-success")">@Model.OrphanedPercentage.ToString("F1")%</h4>
                                <small>Orphaned Rate</small>
                                <div class="mt-2">
                                    @if (Model.OrphanedPercentage > 10)
                                    {
                                        <span class="badge bg-danger">Critical</span>
                                    }
                                    else if (Model.OrphanedPercentage > 5)
                                    {
                                        <span class="badge bg-warning">Warning</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-success">Good</span>
                                    }
                                </div>
                            </div>
                        </div>
                        <div class="col-6">
                            <div class="text-center p-3 border rounded mb-3">
                                <h4 class="@(Model.StuckPercentage > 15 ? "text-danger" : Model.StuckPercentage > 10 ? "text-warning" : "text-success")">@Model.StuckPercentage.ToString("F1")%</h4>
                                <small>Stuck Rate</small>
                                <div class="mt-2">
                                    @if (Model.StuckPercentage > 15)
                                    {
                                        <span class="badge bg-danger">Critical</span>
                                    }
                                    else if (Model.StuckPercentage > 10)
                                    {
                                        <span class="badge bg-warning">Warning</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-success">Good</span>
                                    }
                                </div>
                            </div>
                        </div>
                        <div class="col-6">
                            <div class="text-center p-3 border rounded mb-3">
                                <h4 class="@(Model.RecentErrorsCount > 5 ? "text-danger" : Model.RecentErrorsCount > 0 ? "text-warning" : "text-success")">@Model.RecentErrorsCount</h4>
                                <small>24h Errors</small>
                                <div class="mt-2">
                                    @if (Model.RecentErrorsCount > 5)
                                    {
                                        <span class="badge bg-danger">High</span>
                                    }
                                    else if (Model.RecentErrorsCount > 0)
                                    {
                                        <span class="badge bg-warning">Some</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-success">None</span>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Health Recommendations -->
        <div class="col-md-6">
            <div class="card h-100">
                <div class="card-header bg-warning text-dark">
                    <h5 class="mb-0"><i class="fas fa-lightbulb me-2"></i>Health Recommendations</h5>
                </div>
                <div class="card-body">
                    @if (Model.HealthScore >= 90)
                    {
                        <div class="alert alert-success">
                            <i class="fas fa-check-circle me-2"></i>
                            <strong>Excellent!</strong> Your Risk Backlog system is running optimally. Continue monitoring for any changes.
                        </div>
                    }
                    else if (Model.HealthScore >= 75)
                    {
                        <div class="alert alert-info">
                            <i class="fas fa-info-circle me-2"></i>
                            <strong>Good status.</strong> Minor optimizations may help improve performance.
                        </div>
                    }
                    else if (Model.HealthScore >= 50)
                    {
                        <div class="alert alert-warning">
                            <i class="fas fa-exclamation-triangle me-2"></i>
                            <strong>Needs attention.</strong> Several issues require review and remediation.
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-danger">
                            <i class="fas fa-exclamation-circle me-2"></i>
                            <strong>Critical issues detected!</strong> Immediate action required to restore system health.
                        </div>
                    }

                    <h6>Recommended Actions:</h6>
                    <ul class="list-unstyled">
                        @if (Model.OrphanedEntriesCount > 0)
                        {
                            <li><i class="fas fa-wrench text-danger me-2"></i>Fix @Model.OrphanedEntriesCount orphaned entries (missing risk links)</li>
                        }
                        @if (Model.StuckEntriesCount > 0)
                        {
                            <li><i class="fas fa-clock text-warning me-2"></i>Review @Model.StuckEntriesCount stuck entries (over 7 days assigned)</li>
                        }
                        @if (Model.RecentErrorsCount > 0)
                        {
                            <li><i class="fas fa-bug text-danger me-2"></i>Investigate @Model.RecentErrorsCount recent errors in logs</li>
                        }
                        @if (Model.TotalBacklogEntries > 100)
                        {
                            <li><i class="fas fa-users text-info me-2"></i>Consider adding more analysts to handle high volume</li>
                        }
                        @if (Model.HealthScore >= 90)
                        {
                            <li><i class="fas fa-check text-success me-2"></i>Continue current monitoring and maintenance practices</li>
                        }
                    </ul>
                </div>
            </div>
        </div>
    </div>

    <!-- Detailed Analysis -->
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0"><i class="fas fa-chart-line me-2"></i>Detailed System Analysis</h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-4">
                            <h6>Workflow Efficiency</h6>
                            @{
                                var processed = Model.BacklogByStatus.GetValueOrDefault("Approved", 0) + Model.BacklogByStatus.GetValueOrDefault("Rejected", 0);
                                var inProgress = Model.BacklogByStatus.GetValueOrDefault("Unassigned", 0) + Model.BacklogByStatus.GetValueOrDefault("AssignedToAnalyst", 0) + Model.BacklogByStatus.GetValueOrDefault("AssignedToManager", 0);
                                var throughputRate = Model.TotalBacklogEntries > 0 ? (processed * 100.0 / Model.TotalBacklogEntries) : 0;
                            }
                            <div class="progress mb-2">
                                <div class="progress-bar bg-success" role="progressbar" style="width: @throughputRate%" aria-valuenow="@throughputRate" aria-valuemin="0" aria-valuemax="100"></div>
                            </div>
                            <small>@throughputRate.ToString("F1")% processed (@processed of @Model.TotalBacklogEntries)</small>
                        </div>
                        
                        <div class="col-md-4">
                            <h6>Data Quality</h6>
                            @{
                                var dataQuality = Model.TotalBacklogEntries > 0 ? ((Model.TotalBacklogEntries - Model.OrphanedEntriesCount) * 100.0 / Model.TotalBacklogEntries) : 100;
                            }
                            <div class="progress mb-2">
                                <div class="progress-bar bg-@(dataQuality > 90 ? "success" : dataQuality > 80 ? "warning" : "danger")" role="progressbar" style="width: @dataQuality%" aria-valuenow="@dataQuality" aria-valuemin="0" aria-valuemax="100"></div>
                            </div>
                            <small>@dataQuality.ToString("F1")% data integrity</small>
                        </div>

                        <div class="col-md-4">
                            <h6>Workflow Velocity</h6>
                            @{
                                var velocity = Model.TotalBacklogEntries > 0 ? ((Model.TotalBacklogEntries - Model.StuckEntriesCount) * 100.0 / Model.TotalBacklogEntries) : 100;
                            }
                            <div class="progress mb-2">
                                <div class="progress-bar bg-@(velocity > 85 ? "success" : velocity > 70 ? "warning" : "danger")" role="progressbar" style="width: @velocity%" aria-valuenow="@velocity" aria-valuemin="0" aria-valuemax="100"></div>
                            </div>
                            <small>@velocity.ToString("F1")% moving within SLA</small>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .progress {
        background-color: #e9ecef;
    }
    
    .card {
        box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
        transition: box-shadow 0.15s ease-in-out;
    }
    
    .card:hover {
        box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
    }
    
    .alert {
        border-left: 4px solid;
        border-left-color: var(--bs-border-color);
    }
    
    .alert-success {
        border-left-color: #198754;
    }
    
    .alert-info {
        border-left-color: #0dcaf0;
    }
    
    .alert-warning {
        border-left-color: #ffc107;
    }
    
    .alert-danger {
        border-left-color: #dc3545;
    }
</style>
@model CyberRiskApp.ViewModels.RiskFilterViewModel
@using CyberRiskApp.Models
@{
    ViewData["Title"] = "Risk Register";
}

<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2><i class="fas fa-shield-alt me-2"></i>Risk Register</h2>
        <div>
            @if (User.IsInRole("GRCAnalyst") || User.IsInRole("GRCManager") || User.IsInRole("Admin"))
            {
                <a asp-action="Upload" class="btn btn-info me-2">
                    <i class="fas fa-upload me-2"></i>Upload Excel
                </a>
                <a asp-action="Create" class="btn btn-success me-2">
                    <i class="fas fa-plus me-2"></i>Add Risk
                </a>
            }
            <a asp-action="ExportToExcel" class="btn btn-outline-success">
                <i class="fas fa-file-excel me-2"></i>Export to Excel
            </a>
        </div>
    </div>

    <!-- Risk Heatmap -->
    <div class="card mb-4">
        <div class="card-header bg-primary text-white">
            <h5 class="mb-0">
                <i class="fas fa-fire me-2"></i>Risk Heatmap
                <small class="ms-2">(@Model.FilteredCount risks)</small>
            </h5>
        </div>
        <div class="card-body">
            <div class="risk-heatmap-wrapper">
                <h6 class="text-center mb-3">Risk Matrix - Current Risk Distribution</h6>
                
                <!-- Main Heatmap Container -->
                <div class="heatmap-container">
                    <!-- Matrix and Labels Container -->
                    <div class="matrix-main-container">
                        <!-- Y-Axis Label -->
                        <div class="y-axis-container">
                            <div class="y-axis-title">IMPACT</div>
                        </div>
                        
                        <!-- Y-Axis Labels and Grid -->
                        <div class="matrix-wrapper">
                        <!-- Impact Labels (Left side) -->
                        <div class="impact-axis">
                            <div class="impact-level">Critical (4)</div>
                            <div class="impact-level">High (3)</div>
                            <div class="impact-level">Medium (2)</div>
                            <div class="impact-level">Low (1)</div>
                        </div>
                        
                        <!-- Matrix Grid -->
                        <div class="matrix-grid">
                            @{
                                var heatmapData = GetHeatmapData(Model.FilteredRisks);
                                var impactLevels = new[] { 4, 3, 2, 1 }; // Critical to Low
                                var likelihoodLevels = new[] { 1, 2, 3, 4 }; // Unlikely to Almost Certain
                            }
                            
                            @foreach (var impact in impactLevels)
                            {
                                <div class="matrix-row">
                                    @foreach (var likelihood in likelihoodLevels)
                                    {
                                        var cellKey = $"{impact}-{likelihood}";
                                        var riskCount = heatmapData.ContainsKey(cellKey) ? heatmapData[cellKey].Count : 0;
                                        var riskScore = impact * likelihood;
                                        var riskLevel = GetHeatmapRiskLevel(impact, likelihood);
                                        var cellClass = GetMatrixCellClass(riskScore);
                                        
                                        <div class="matrix-cell @cellClass" 
                                             data-bs-toggle="tooltip"
                                             data-bs-placement="top"
                                             title="@GetImpactText(impact) Ã— @GetLikelihoodText(likelihood)&#013;Risk Score: @riskScore&#013;@riskCount risk(s)"
                                             data-impact="@impact" 
                                             data-likelihood="@likelihood">
                                            <div class="cell-score">@riskScore</div>
                                            @if (riskCount > 0)
                                            {
                                                <div class="cell-count">
                                                    <span class="badge bg-dark">@riskCount</span>
                                                </div>
                                            }
                                        </div>
                                    }
                                </div>
                            }
                        </div>
                    </div>
                    </div>
                    
                    <!-- X-Axis Labels -->
                    <div class="likelihood-axis">
                        <div class="likelihood-level">Unlikely<br/>(1)</div>
                        <div class="likelihood-level">Possible<br/>(2)</div>
                        <div class="likelihood-level">Likely<br/>(3)</div>
                        <div class="likelihood-level">Almost Certain<br/>(4)</div>
                    </div>
                    
                    <!-- X-Axis Label -->
                    <div class="x-axis-container">
                        <div class="x-axis-title">LIKELIHOOD</div>
                    </div>
                </div>

                <!-- Risk Level Legend -->
                <div class="risk-legend mt-4">
                    <div class="legend-title">Risk Levels:</div>
                    <div class="legend-items">
                        @{
                            var criticalMin = Model.RiskMatrix?.QualitativeCriticalThreshold ?? 12;
                            var highMin = Model.RiskMatrix?.QualitativeHighThreshold ?? 8;
                            var mediumMin = Model.RiskMatrix?.QualitativeMediumThreshold ?? 4;
                            var criticalMax = 16;
                            var highMax = criticalMin - 1;
                            var mediumMax = highMin - 1;
                            var lowMax = mediumMin - 1;
                        }
                        <div class="legend-item">
                            <div class="legend-box critical"></div>
                            <span>Critical (@criticalMin-@criticalMax)</span>
                        </div>
                        <div class="legend-item">
                            <div class="legend-box high"></div>
                            <span>High (@highMin-@highMax)</span>
                        </div>
                        <div class="legend-item">
                            <div class="legend-box medium"></div>
                            <span>Medium (@mediumMin-@mediumMax)</span>
                        </div>
                        <div class="legend-item">
                            <div class="legend-box low"></div>
                            <span>Low (1-@lowMax)</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Filter Panel -->
    <div class="card mb-4">
        <div class="card-header">
            <h5 class="mb-0">
                <button class="btn btn-link" type="button" data-bs-toggle="collapse" data-bs-target="#filterPanel" aria-expanded="false">
                    <i class="fas fa-filter me-2"></i>Filter Risks (@Model.FilteredCount of @Model.TotalCount)
                </button>
            </h5>
        </div>
        <div class="collapse" id="filterPanel">
            <div class="card-body">
                <form method="get" asp-action="Index">
                    <div class="row">
                        <div class="col-md-3 mb-3">
                            <label class="form-label">Register ID</label>
                            <input asp-for="RegisterId" class="form-control" placeholder="Search by ID..." />
                        </div>
                        <div class="col-md-3 mb-3">
                            <label class="form-label">Title</label>
                            <input asp-for="Title" class="form-control" placeholder="Search by title..." />
                        </div>
                        <div class="col-md-3 mb-3">
                            <label class="form-label">Threat Scenario</label>
                            <input asp-for="ThreatScenario" class="form-control" placeholder="Search threat scenario..." />
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-3 mb-3">
                            <label class="form-label">CIA Triad</label>
                            <select asp-for="CIATriad" asp-items="Model.CIATriadOptions" class="form-select">
                                <option value="">All CIA Elements</option>
                            </select>
                        </div>
                        <div class="col-md-3 mb-3">
                            <label class="form-label">Organization</label>
                            <select asp-for="Organization" asp-items="Model.OrganizationOptions" class="form-select">
                                <option value="">All Organizations</option>
                            </select>
                        </div>
                        <div class="col-md-3 mb-3">
                            <label class="form-label">Asset</label>
                            <select asp-for="Asset" asp-items="Model.AssetOptions" class="form-select">
                                <option value="">All Assets</option>
                            </select>
                        </div>
                        <div class="col-md-3 mb-3">
                            <label class="form-label">Risk Owner</label>
                            <select asp-for="RiskOwner" asp-items="Model.RiskOwnerOptions" class="form-select">
                                <option value="">All Risk Owners</option>
                            </select>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-2 mb-3">
                            <label class="form-label">Impact</label>
                            <select asp-for="Impact" asp-items="Model.ImpactOptions" class="form-select">
                                <option value="">All</option>
                            </select>
                        </div>
                        <div class="col-md-2 mb-3">
                            <label class="form-label">Likelihood</label>
                            <select asp-for="Likelihood" asp-items="Model.LikelihoodOptions" class="form-select">
                                <option value="">All</option>
                            </select>
                        </div>
                        <div class="col-md-2 mb-3">
                            <label class="form-label">Exposure</label>
                            <select asp-for="Exposure" asp-items="Model.ExposureOptions" class="form-select">
                                <option value="">All</option>
                            </select>
                        </div>
                        <div class="col-md-3 mb-3">
                            <label class="form-label">Current Risk Level</label>
                            <select asp-for="InherentRiskLevel" asp-items="Model.InherentRiskLevelOptions" class="form-select">
                                <option value="">All Levels</option>
                            </select>
                        </div>
                        <div class="col-md-3 mb-3">
                            <label class="form-label">Risk Treatment</label>
                            <select asp-for="RiskTreatment" asp-items="Model.RiskTreatmentOptions" class="form-select">
                                <option value="">All Treatments</option>
                            </select>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-3 mb-3">
                            <label class="form-label">Risk After Treatment</label>
                            <select asp-for="ResidualRisk" asp-items="Model.ResidualRiskOptions" class="form-select">
                                <option value="">All Levels</option>
                            </select>
                        </div>
                        <div class="col-md-3 mb-3">
                            <label class="form-label">Status</label>
                            <select asp-for="Status" asp-items="Model.StatusOptions" class="form-select">
                                <option value="">All Status</option>
                            </select>
                        </div>
                        <div class="col-md-3 mb-3">
                            <label class="form-label">Date Opened From</label>
                            <input asp-for="DateOpenedFrom" type="date" class="form-control" />
                        </div>
                        <div class="col-md-3 mb-3">
                            <label class="form-label">Date Opened To</label>
                            <input asp-for="DateOpenedTo" type="date" class="form-control" />
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label class="form-label">Treatment Plan</label>
                            <input asp-for="TreatmentPlan" class="form-control" placeholder="Search treatment plan..." />
                        </div>
                        <div class="col-md-6 mb-3">
                            <label class="form-label">Risk Assessment</label>
                            <input asp-for="RiskAssessment" class="form-control" placeholder="Search risk assessment..." />
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-12">
                            <button type="submit" class="btn btn-primary me-2">
                                <i class="fas fa-search me-1"></i>Apply Filters
                            </button>
                            <a asp-action="Index" class="btn btn-secondary">
                                <i class="fas fa-times me-1"></i>Clear Filters
                            </a>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Results -->
    @if (Model.FilteredRisks.Any())
    {
        <div class="card">
            <div class="card-header bg-light">
                <h6 class="mb-0">Risk Register (@Model.FilteredCount risks)</h6>
            </div>
            <div class="card-body p-0">
                <div class="table-responsive">
                    <table class="table table-hover table-sm mb-0">
                        <thead class="table-dark">
                            <tr>
                                <th>Register ID</th>
                                <th>Title</th>
                                <th>Threat Scenario</th>
                                <th>CIA Triad</th>
                                <th>Organization</th>
                                <th>Asset</th>
                                <th>Risk Owner</th>
                                <th>Impact</th>
                                <th>Likelihood</th>
                                <th>Exposure</th>
                                <th>Current Risk</th>
                                <th>Treatment</th>
                                <th>Risk After Treatment</th>
                                <th>Date Opened</th>
                                <th>Last Reviewed</th>
                                <th>Status</th>
                                <th>SLA Status</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var risk in Model.FilteredRisks)
                            {
                                <tr>
                                    <td><code class="text-primary">@risk.RiskNumber</code></td>
                                    <td>@risk.Title</td>
                                    <td class="text-truncate" style="max-width: 150px;" title="@risk.ThreatScenario">
                                        @(risk.ThreatScenario.Length > 50 ? risk.ThreatScenario.Substring(0, 50) + "..." : risk.ThreatScenario)
                                    </td>
                                    <td><span class="badge bg-secondary">@risk.CIATriad</span></td>
                                    <td>@risk.BusinessUnit</td>
                                    <td>@risk.Asset</td>
                                    <td>@risk.Owner</td>
                                    <td><span class="badge bg-@GetImpactColor(risk.Impact)">@risk.Impact</span></td>
                                    <td><span class="badge bg-@GetLikelihoodColor(risk.Likelihood)">@risk.Likelihood</span></td>
                                    <td><span class="badge bg-@GetExposureColor(risk.Exposure)">@risk.Exposure</span></td>
                                    <td><span class="badge bg-@GetRiskLevelColor(risk.InherentRiskLevel)">@risk.InherentRiskLevel</span></td>
                                    <td><span class="badge bg-primary">@risk.Treatment</span></td>
                                    <td><span class="badge bg-@GetRiskLevelColor(risk.ResidualRiskLevel)">@risk.ResidualRiskLevel</span></td>
                                    <td>@risk.OpenDate.ToString("MM/dd/yyyy")</td>
                                    <td>@(risk.NextReviewDate?.ToString("MM/dd/yyyy") ?? "N/A")</td>
                                    <td><span class="badge bg-@GetStatusColor(risk.Status)">@risk.Status</span></td>
                                    <td>
                                        @{
                                            // Enhanced SLA Status for Risks (focused on review SLAs for accepted risks)
                                            var slaStatusClass = "badge ";
                                            var slaIcon = "";
                                            var slaText = "";
                                            
                                            if (risk.Status == CyberRiskApp.Models.RiskStatus.Closed)
                                            {
                                                slaStatusClass += "bg-secondary";
                                                slaIcon = "fas fa-check-circle";
                                                slaText = "Closed";
                                            }
                                            else if (risk.Status == CyberRiskApp.Models.RiskStatus.Accepted)
                                            {
                                                // Use computed properties for review SLA status
                                                var isReviewOverdue = risk.IsReviewOverdue;
                                                var timeUntilReview = risk.TimeUntilReview;
                                                var overdueBy = risk.OverdueBy;
                                                
                                                if (isReviewOverdue)
                                                {
                                                    slaStatusClass += "bg-danger";
                                                    slaIcon = "fas fa-exclamation-triangle";
                                                    var overdueDays = overdueBy?.Days ?? 0;
                                                    slaText = $"Review Overdue ({overdueDays}d)";
                                                }
                                                else if (timeUntilReview.HasValue)
                                                {
                                                    var daysUntilReview = timeUntilReview.Value.Days;
                                                    if (daysUntilReview <= 7)
                                                    {
                                                        slaStatusClass += "bg-warning text-dark";
                                                        slaIcon = "fas fa-clock";
                                                        slaText = daysUntilReview == 0 ? "Review Due Today" : $"Review Due ({daysUntilReview}d)";
                                                    }
                                                    else if (daysUntilReview <= 30)
                                                    {
                                                        slaStatusClass += "bg-info";
                                                        slaIcon = "fas fa-calendar";
                                                        slaText = "Review Upcoming";
                                                    }
                                                    else
                                                    {
                                                        slaStatusClass += "bg-success";
                                                        slaIcon = "fas fa-calendar-check";
                                                        slaText = "Review On Track";
                                                    }
                                                }
                                                else if (risk.NextReviewDate.HasValue)
                                                {
                                                    slaStatusClass += "bg-primary";
                                                    slaIcon = "fas fa-hourglass-half";
                                                    slaText = $"Review {risk.NextReviewDate.Value:MMM dd}";
                                                }
                                                else
                                                {
                                                    slaStatusClass += "bg-light text-dark";
                                                    slaIcon = "fas fa-question";
                                                    slaText = "No Review Date";
                                                }
                                            }
                                            else
                                            {
                                                slaStatusClass += "bg-primary";
                                                slaIcon = "fas fa-hourglass-half";
                                                slaText = "In Progress";
                                            }
                                        }
                                        <span class="@slaStatusClass">
                                            <i class="@slaIcon me-1"></i>@slaText
                                        </span>
                                    </td>
                                    <td>
                                        <div class="btn-group" role="group">
                                            <a asp-action="Details" asp-route-id="@risk.Id" class="btn btn-sm btn-outline-primary" title="View Details">
                                                <i class="fas fa-eye"></i>
                                            </a>
                                            @if (User.IsInRole("GRCAnalyst") || User.IsInRole("GRCManager") || User.IsInRole("Admin"))
                                            {
                                                <a asp-action="Edit" asp-route-id="@risk.Id" class="btn btn-sm btn-outline-secondary" title="Edit">
                                                    <i class="fas fa-edit"></i>
                                                </a>
                                                @if (risk.Status != CyberRiskApp.Models.RiskStatus.Closed)
                                                {
                                                    <button type="button" class="btn btn-sm btn-outline-warning" 
                                                            data-bs-toggle="modal" 
                                                            data-bs-target="#closeModal@(risk.Id)"
                                                            title="@(User.IsInRole("Admin") ? "Close Risk (Admin Override)" : "Close Risk")">
                                                        <i class="fas fa-times-circle"></i>
                                                        @if (User.IsInRole("Admin"))
                                                        {
                                                            <i class="fas fa-shield-alt" style="font-size: 0.7em; margin-left: 2px;" title="Admin Override Available"></i>
                                                        }
                                                    </button>
                                                }
                                            }
                                            @if (User.IsInRole("Admin"))
                                            {
                                                <form asp-action="Delete" asp-route-id="@risk.Id" method="post" style="display:inline;" 
                                                      onsubmit="return confirm('Are you sure you want to delete risk @risk.RiskNumber - @risk.Title? This action cannot be undone.');">
                                                    @Html.AntiForgeryToken()
                                                    <button type="submit" class="btn btn-sm btn-outline-danger" title="Delete Risk">
                                                        <i class="fas fa-trash"></i>
                                                    </button>
                                                </form>
                                            }
                                        </div>
                                    </td>
                                </tr>
                                
                                <!-- Close Risk Modal -->
                                @if (risk.Status != CyberRiskApp.Models.RiskStatus.Closed && (User.IsInRole("GRCAnalyst") || User.IsInRole("GRCManager") || User.IsInRole("Admin")))
                                {
                                    <div class="modal fade" id="closeModal@(risk.Id)" tabindex="-1">
                                        <div class="modal-dialog modal-lg">
                                            <div class="modal-content">
                                                <div class="modal-header @(User.IsInRole("Admin") ? "bg-danger text-white" : "bg-warning text-dark")">
                                                    <h5 class="modal-title">
                                                        <i class="fas fa-times-circle me-2"></i>
                                                        @if (User.IsInRole("Admin"))
                                                        {
                                                            <span>Close Risk (Admin Override)</span>
                                                            <i class="fas fa-shield-alt ms-2" title="Admin Override Privileges"></i>
                                                        }
                                                        else
                                                        {
                                                            <span>Close Risk</span>
                                                        }
                                                    </h5>
                                                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                                                </div>
                                                <div class="modal-body">
                                                    @if (User.IsInRole("Admin"))
                                                    {
                                                        <div class="alert alert-warning">
                                                            <i class="fas fa-shield-alt me-2"></i>
                                                            <strong>Admin Override:</strong> As an administrator, you can close any risk regardless of assignment or ownership status. This action will override normal workflow restrictions and immediately close the risk.
                                                        </div>
                                                    }
                                                    else
                                                    {
                                                        <div class="alert alert-info">
                                                            <i class="fas fa-info-circle me-2"></i>
                                                            <strong>Important:</strong> Closing this risk will mark it as resolved. This action can be reversed by editing the risk later if needed.
                                                        </div>
                                                    }

                                                    <!-- Risk Summary -->
                                                    <div class="card mb-4">
                                                        <div class="card-header">
                                                            <h6 class="mb-0">Risk Details</h6>
                                                        </div>
                                                        <div class="card-body">
                                                            <div class="row">
                                                                <div class="col-md-6">
                                                                    <p><strong>Register ID:</strong> <code class="text-primary">@risk.RiskNumber</code></p>
                                                                    <p><strong>Title:</strong> @risk.Title</p>
                                                                    <p><strong>Risk Owner:</strong> @risk.Owner</p>
                                                                    <p><strong>Organization:</strong> @risk.BusinessUnit</p>
                                                                    <p><strong>Asset:</strong> @risk.Asset</p>
                                                                </div>
                                                                <div class="col-md-6">
                                                                    <p><strong>Risk Level:</strong> 
                                                                        <span class="badge bg-@GetRiskLevelColor(risk.RiskLevel)">@risk.RiskLevel</span>
                                                                    </p>
                                                                    <p><strong>ALE:</strong> @risk.ALE.ToString("C")</p>
                                                                    <p><strong>Current Status:</strong> 
                                                                        <span class="badge bg-@GetStatusColor(risk.Status)">@risk.Status</span>
                                                                    </p>
                                                                    <p><strong>Date Opened:</strong> @risk.OpenDate.ToString("MM/dd/yyyy")</p>
                                                                </div>
                                                            </div>
                                                            
                                                            @if (!string.IsNullOrEmpty(risk.ThreatScenario))
                                                            {
                                                                <div class="row mt-3">
                                                                    <div class="col-12">
                                                                        <p><strong>Threat Scenario:</strong></p>
                                                                        <p class="text-muted">@risk.ThreatScenario</p>
                                                                    </div>
                                                                </div>
                                                            }
                                                            
                                                            @if (!string.IsNullOrEmpty(risk.Description))
                                                            {
                                                                <div class="row mt-3">
                                                                    <div class="col-12">
                                                                        <p><strong>Risk Statement:</strong></p>
                                                                        <p class="text-muted">@risk.Description</p>
                                                                    </div>
                                                                </div>
                                                            }
                                                        </div>
                                                    </div>

                                                    <!-- Close Risk Form -->
                                                    <form asp-action="CloseConfirmed" method="post" id="closeForm@(risk.Id)">
                                                        @Html.AntiForgeryToken()
                                                        <input type="hidden" name="id" value="@risk.Id" />
                                                        
                                                        <div class="form-group mb-3">
                                                            <label for="remediationDetails@(risk.Id)" class="form-label">
                                                                <strong>Remediation Details <span class="text-danger">*</span></strong>
                                                            </label>
                                                            <textarea id="remediationDetails@(risk.Id)" 
                                                                      name="remediationDetails" 
                                                                      class="form-control" 
                                                                      rows="5" 
                                                                      required
                                                                      placeholder="Please provide detailed information about how this risk was remediated, including:&#10;&#10;â€¢ Actions taken to address the risk&#10;â€¢ Controls implemented&#10;â€¢ Evidence of resolution&#10;â€¢ Any residual risk considerations&#10;â€¢ Date of completion"></textarea>
                                                            <div class="form-text">
                                                                Describe the specific actions taken to remediate this risk, including any controls implemented and evidence of resolution.
                                                            </div>
                                                        </div>
                                                    </form>
                                                </div>
                                                <div class="modal-footer">
                                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                                                        <i class="fas fa-arrow-left me-2"></i>Cancel
                                                    </button>
                                                    @if (User.IsInRole("Admin"))
                                                    {
                                                        <button type="button" class="btn btn-danger" onclick="submitCloseForm(@risk.Id)">
                                                            <i class="fas fa-shield-alt me-2"></i>Admin Override - Close Risk
                                                        </button>
                                                    }
                                                    else
                                                    {
                                                        <button type="button" class="btn btn-warning" onclick="submitCloseForm(@risk.Id)">
                                                            <i class="fas fa-times-circle me-2"></i>Close Risk
                                                        </button>
                                                    }
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="text-center py-5">
            <i class="fas fa-shield-alt fa-3x text-muted mb-3"></i>
            <h5 class="text-muted">No risks found</h5>
            <p class="text-muted">@(Model.TotalCount == 0 ? "No risks have been created yet." : "Try adjusting your filter criteria.")</p>
            @if (Model.TotalCount == 0)
            {
                <a asp-action="Create" class="btn btn-success">
                    <i class="fas fa-plus me-2"></i>Create First Risk
                </a>
            }
        </div>
    }
</div>

@functions {
    private string GetRiskLevelColor(RiskLevel level)
    {
        return level switch
        {
            RiskLevel.Critical => "danger",
            RiskLevel.High => "warning",
            RiskLevel.Medium => "info",
            RiskLevel.Low => "success",
            _ => "secondary"
        };
    }

    private string GetStatusColor(RiskStatus status)
    {
        return status switch
        {
            RiskStatus.Open => "danger",
            RiskStatus.Closed => "success",
            RiskStatus.Accepted => "warning",
            RiskStatus.UnderReview => "info",
            _ => "secondary"
        };
    }

    private string GetImpactColor(ImpactLevel impact)
    {
        return impact switch
        {
            ImpactLevel.Critical => "danger",
            ImpactLevel.High => "warning",
            ImpactLevel.Medium => "info",
            ImpactLevel.Low => "success",
            _ => "secondary"
        };
    }

    private string GetLikelihoodColor(LikelihoodLevel likelihood)
    {
        return likelihood switch
        {
            LikelihoodLevel.AlmostCertain => "danger",
            LikelihoodLevel.Likely => "warning",
            LikelihoodLevel.Possible => "info",
            LikelihoodLevel.Unlikely => "success",
            _ => "secondary"
        };
    }

    private string GetExposureColor(ExposureLevel exposure)
    {
        return exposure switch
        {
            ExposureLevel.HighlyExposed => "danger",
            ExposureLevel.ModeratelyExposed => "warning",
            ExposureLevel.Exposed => "info",
            ExposureLevel.SlightlyExposed => "success",
            _ => "secondary"
        };
    }

    // Heatmap helper functions
    private Dictionary<string, List<Risk>> GetHeatmapData(IEnumerable<Risk> risks)
    {
        var heatmapData = new Dictionary<string, List<Risk>>();
        
        foreach (var risk in risks)
        {
            var impactValue = (int)risk.Impact + 1; // Convert enum to 1-4 scale
            var likelihoodValue = (int)risk.Likelihood + 1; // Convert enum to 1-4 scale
            var key = $"{impactValue}-{likelihoodValue}";
            
            if (!heatmapData.ContainsKey(key))
                heatmapData[key] = new List<Risk>();
            
            heatmapData[key].Add(risk);
        }
        
        return heatmapData;
    }

    private string GetHeatmapRiskLevel(int impact, int likelihood)
    {
        var riskScore = impact * likelihood;
        
        // Use actual configured thresholds from risk level settings
        if (Model.RiskMatrix != null)
        {
            if (riskScore >= Model.RiskMatrix.QualitativeCriticalThreshold)
                return "Critical";
            if (riskScore >= Model.RiskMatrix.QualitativeHighThreshold)
                return "High";
            if (riskScore >= Model.RiskMatrix.QualitativeMediumThreshold)
                return "Medium";
            return "Low";
        }
        
        // Fallback to default thresholds if settings are not available
        return riskScore switch
        {
            >= 12 => "Critical",
            >= 8 => "High", 
            >= 4 => "Medium",
            _ => "Low"
        };
    }

    private string GetHeatmapCellClass(string riskLevel)
    {
        return riskLevel switch
        {
            "Critical" => "cell-critical",
            "High" => "cell-high",
            "Medium" => "cell-medium",
            "Low" => "cell-low",
            _ => "cell-none"
        };
    }
    
    private string GetMatrixCellClass(int riskScore)
    {
        // Use actual configured thresholds from risk level settings
        if (Model.RiskMatrix != null)
        {
            if (riskScore >= Model.RiskMatrix.QualitativeCriticalThreshold)
                return "risk-critical";
            if (riskScore >= Model.RiskMatrix.QualitativeHighThreshold)
                return "risk-high";
            if (riskScore >= Model.RiskMatrix.QualitativeMediumThreshold)
                return "risk-medium";
            return "risk-low";
        }
        
        // Fallback to default thresholds if settings are not available
        return riskScore switch
        {
            >= 12 => "risk-critical",
            >= 8 => "risk-high",
            >= 4 => "risk-medium",
            _ => "risk-low"
        };
    }

    private string GetImpactText(int impact)
    {
        return impact switch
        {
            4 => "Critical",
            3 => "High",
            2 => "Medium", 
            1 => "Low",
            _ => "Unknown"
        };
    }

    private string GetLikelihoodText(int likelihood)
    {
        return likelihood switch
        {
            4 => "Almost Certain",
            3 => "Likely",
            2 => "Possible",
            1 => "Unlikely", 
            _ => "Unknown"
        };
    }
}

<style>
    /* New Risk Heatmap Styles */
    .risk-heatmap-wrapper {
        padding: 20px;
        background: #ffffff;
        border-radius: 8px;
    }

    .heatmap-container {
        display: flex;
        flex-direction: column;
        align-items: center;
        max-width: 800px;
        margin: 0 auto;
    }

    .matrix-main-container {
        display: flex;
        flex-direction: row;
        align-items: center;
    }

    .matrix-wrapper {
        display: flex;
        align-items: flex-start;
        gap: 10px;
    }

    /* Y-Axis Styling */
    .y-axis-container {
        display: flex;
        align-items: center;
        justify-content: center;
        margin-right: 15px;
        height: 100%;
    }

    .y-axis-title {
        writing-mode: vertical-rl;
        text-orientation: mixed;
        font-weight: 700;
        font-size: 14px;
        color: #495057;
        letter-spacing: 2px;
        text-transform: uppercase;
    }

    /* Impact Axis Labels */
    .impact-axis {
        display: flex;
        flex-direction: column;
        justify-content: flex-start;
        min-width: 100px;
        padding-right: 10px;
        padding-top: 2px;
    }

    .impact-level {
        height: 82px;
        display: flex;
        align-items: center;
        justify-content: flex-end;
        font-size: 13px;
        font-weight: 600;
        color: #495057;
        margin-bottom: 2px;
    }

    .impact-level:last-child {
        margin-bottom: 0;
    }

    /* Matrix Grid */
    .matrix-grid {
        display: flex;
        flex-direction: column;
        gap: 2px;
        background: #dee2e6;
        padding: 2px;
        border-radius: 4px;
    }

    .matrix-row {
        display: flex;
        gap: 2px;
    }

    .matrix-cell {
        width: 80px;
        height: 80px;
        background: white;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        transition: all 0.2s ease;
        position: relative;
        border: 1px solid transparent;
    }

    .matrix-cell:hover {
        transform: scale(1.08);
        box-shadow: 0 4px 16px rgba(0,0,0,0.2);
        z-index: 10;
        border: 2px solid #0056b3;
    }

    .cell-score {
        font-size: 24px;
        font-weight: 700;
        color: white;
        line-height: 1;
    }

    .cell-count {
        position: absolute;
        top: 5px;
        right: 5px;
    }

    .cell-count .badge {
        font-size: 11px;
        padding: 2px 6px;
    }

    /* Risk Level Colors */
    .risk-critical {
        background: #dc3545;
    }

    .risk-high {
        background: #fd7e14;
    }

    .risk-medium {
        background: #ffc107;
        color: #212529 !important;
    }

    .risk-medium .cell-score {
        color: #212529 !important;
    }

    .risk-low {
        background: #28a745;
    }

    /* Likelihood Axis */
    .likelihood-axis {
        display: flex;
        justify-content: flex-start;
        width: 328px;
        margin-top: 10px;
        margin-left: 125px;
        gap: 2px;
    }

    .likelihood-level {
        width: 80px;
        text-align: center;
        font-size: 12px;
        font-weight: 600;
        color: #495057;
        line-height: 1.2;
    }

    /* X-Axis Title */
    .x-axis-container {
        display: flex;
        justify-content: center;
        margin-top: 10px;
    }

    .x-axis-title {
        font-weight: 700;
        font-size: 14px;
        color: #495057;
        letter-spacing: 2px;
        text-transform: uppercase;
    }

    /* Risk Legend */
    .risk-legend {
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 30px;
        padding: 20px;
        background: #f8f9fa;
        border-radius: 8px;
        border: 1px solid #dee2e6;
    }

    .legend-title {
        font-weight: 600;
        font-size: 14px;
        color: #495057;
    }

    .legend-items {
        display: flex;
        gap: 20px;
        flex-wrap: wrap;
    }

    .legend-item {
        display: flex;
        align-items: center;
        gap: 8px;
        font-size: 13px;
        color: #495057;
    }

    .legend-box {
        width: 24px;
        height: 24px;
        border-radius: 4px;
        border: 1px solid rgba(0,0,0,0.1);
    }

    .legend-box.critical {
        background: #dc3545;
    }

    .legend-box.high {
        background: #fd7e14;
    }

    .legend-box.medium {
        background: #ffc107;
    }

    .legend-box.low {
        background: #28a745;
    }

    /* Responsive Design */
    @@media (max-width: 768px) {
        .matrix-cell {
            width: 60px;
            height: 60px;
        }
        
        .cell-score {
            font-size: 18px;
        }
        
        .impact-level {
            height: 60px;
            font-size: 11px;
            min-width: 70px;
        }
        
        .likelihood-level {
            width: 60px;
            font-size: 10px;
        }
        
        .y-axis-title, .x-axis-title {
            font-size: 12px;
        }
        
        .legend-items {
            gap: 10px;
        }
        
        .legend-item {
            font-size: 11px;
        }
        
        .legend-box {
            width: 18px;
            height: 18px;
        }
    }

    /* Table styles */
    .table th {
        font-size: 0.85rem;
        font-weight: 600;
        white-space: nowrap;
    }
    
    .table td {
        font-size: 0.85rem;
        vertical-align: middle;
    }
    
    .badge {
        font-size: 0.75rem;
    }
    
    .text-truncate {
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }
    
    .btn-group .btn {
        margin-right: 2px;
    }
</style>

<script>
    function submitCloseForm(riskId) {
        var textarea = document.getElementById('remediationDetails' + riskId);
        if (!textarea.value.trim()) {
            alert('Please provide remediation details before closing the risk.');
            textarea.focus();
            return;
        }
        
        // Check if user is admin for different confirmation message
        var isAdmin = @Html.Raw(User.IsInRole("Admin").ToString().ToLower());
        var confirmMessage = isAdmin 
            ? 'ADMIN OVERRIDE: Are you sure you want to force close this risk? This will override normal workflow restrictions and immediately close the risk regardless of assignment status.'
            : 'Are you sure you want to close this risk? Make sure you have provided complete remediation details.';
        
        if (confirm(confirmMessage)) {
            document.getElementById('closeForm' + riskId).submit();
        }
    }
</script>
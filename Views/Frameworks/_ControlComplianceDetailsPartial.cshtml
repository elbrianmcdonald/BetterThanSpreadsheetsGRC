@model List<CyberRiskApp.Services.ControlComplianceDetail>

@if (Model.Any())
{
    <div class="table-responsive">
        <table class="table table-hover table-sm">
            <thead class="table-light">
                <tr>
                    <th style="width: 10%;">Control ID</th>
                    <th style="width: 25%;">Title</th>
                    <th style="width: 12%;">Category</th>
                    <th style="width: 8%;">Priority</th>
                    <th style="width: 12%;">Status</th>
                    <th style="width: 15%;">Evidence</th>
                    <th style="width: 18%;">Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var control in Model.OrderBy(c => c.ControlNumber))
                {
                    <tr class="control-row" data-status="@((int)control.Status)" data-category="@control.Category">
                        <td>
                            <code class="small">@control.ControlNumber</code>
                            @if (control.Priority == CyberRiskApp.Models.ControlPriority.High)
                            {
                                <i class="fas fa-star text-warning ms-1" title="High Priority"></i>
                            }
                        </td>
                        <td>
                            <div class="text-truncate" style="max-width: 200px;" title="@control.ControlTitle">
                                @control.ControlTitle
                            </div>
                        </td>
                        <td>
                            <span class="badge badge-light small">@control.Category</span>
                        </td>
                        <td>
                            @switch (control.Priority)
                            {
                                case CyberRiskApp.Models.ControlPriority.High:
                                    <span class="badge badge-danger small">High</span>
                                    break;
                                case CyberRiskApp.Models.ControlPriority.Medium:
                                    <span class="badge badge-warning small">Medium</span>
                                    break;
                                case CyberRiskApp.Models.ControlPriority.Low:
                                    <span class="badge badge-info small">Low</span>
                                    break;
                            }
                        </td>
                        <td>
                            <span class="badge @control.StatusBadgeClass small">
                                @control.StatusDisplayName
                            </span>
                        </td>
                        <td>
                            @if (!string.IsNullOrEmpty(control.Evidence))
                            {
                                <div class="text-truncate small" style="max-width: 120px;" title="@control.Evidence">
                                    @control.Evidence
                                </div>
                            }
                            else
                            {
                                <span class="text-muted small">No evidence</span>
                            }
                        </td>
                        <td>
                            <div class="btn-group btn-group-sm" role="group">
                                <button class="btn btn-outline-info btn-sm" onclick="viewControlDetails(@control.ControlId)" title="View Details">
                                    <i class="fas fa-eye"></i>
                                </button>
                                @if (control.Status != CyberRiskApp.Models.ComplianceStatus.FullyCompliant)
                                {
                                    <button class="btn btn-outline-warning btn-sm" onclick="viewGapAnalysis(@control.ControlId)" title="Gap Analysis">
                                        <i class="fas fa-search-plus"></i>
                                    </button>
                                }
                                <button class="btn btn-outline-primary btn-sm" onclick="updateControlStatus(@control.ControlId)" title="Update Status">
                                    <i class="fas fa-edit"></i>
                                </button>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <!-- Summary Stats -->
    <div class="row mt-3">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center">
                <small class="text-muted">
                    <i class="fas fa-info-circle me-1"></i>
                    Showing @Model.Count controls
                </small>
                <div class="d-flex gap-3">
                    <small class="text-success">
                        <i class="fas fa-check-circle me-1"></i>
                        @Model.Count(c => c.Status == CyberRiskApp.Models.ComplianceStatus.FullyCompliant) Fully Compliant
                    </small>
                    <small class="text-danger">
                        <i class="fas fa-exclamation-circle me-1"></i>
                        @Model.Count(c => c.Status == CyberRiskApp.Models.ComplianceStatus.NonCompliant) Non-Compliant
                    </small>
                    <small class="text-warning">
                        <i class="fas fa-star me-1"></i>
                        @Model.Count(c => c.Priority == CyberRiskApp.Models.ControlPriority.High) High Priority
                    </small>
                </div>
            </div>
        </div>
    </div>
}
else
{
    <div class="text-center py-5">
        <i class="fas fa-list-check fa-3x text-gray-300 mb-3"></i>
        <h5 class="text-muted">No Controls Found</h5>
        <p class="text-muted">No controls match the current filter criteria.</p>
    </div>
}

<script>
    // Control detail functions
    function viewControlDetails(controlId) {
        // TODO: Implement modal popup with full control details
        console.log('Viewing details for control:', controlId);
        alert('Control details view will be implemented in the next iteration.');
    }

    function viewGapAnalysis(controlId) {
        // TODO: Implement gap analysis modal
        console.log('Viewing gap analysis for control:', controlId);
        alert('Gap analysis view will be implemented in the next iteration.');
    }

    function updateControlStatus(controlId) {
        // TODO: Implement inline status update
        console.log('Updating status for control:', controlId);
        alert('Control status update will be implemented in the next iteration.');
    }
</script>
version: '3.8'

services:
  cyberrisk-db:
    image: postgres:16
    container_name: cyberrisk-postgres
    environment:
      POSTGRES_DB: CyberRiskDB
      POSTGRES_USER: cyberrisk_user
      POSTGRES_PASSWORD: ${DB_PASSWORD:-SecurePassword123!}
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    networks:
      - cyberrisk-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U cyberrisk_user -d CyberRiskDB"]
      interval: 30s
      timeout: 10s
      retries: 3

  cyberrisk-app:
    build:
      context: ..
      dockerfile: deployment/Dockerfile
    container_name: cyberrisk-app
    depends_on:
      cyberrisk-db:
        condition: service_healthy
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://+:5000
      ConnectionStrings__DefaultConnection: "Host=cyberrisk-db;Port=5432;Database=CyberRiskDB;Username=cyberrisk_user;Password=${DB_PASSWORD:-SecurePassword123!}"
      AdminSetup__AdminEmail: ${ADMIN_EMAIL:-admin@company.com}
      AdminSetup__RequirePasswordChange: "true"
    ports:
      - "5002:5000"
    volumes:
      - app_data:/app/wwwroot/uploads
      - app_logs:/app/logs
    networks:
      - cyberrisk-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  cyberrisk-nginx:
    image: nginx:alpine
    container_name: cyberrisk-nginx
    depends_on:
      - cyberrisk-app
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./nginx/logs:/var/log/nginx
    networks:
      - cyberrisk-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  app_data:
    driver: local
  app_logs:
    driver: local

networks:
  cyberrisk-network:
    driver: bridge